{"version":3,"sources":["components/Catalog.js","components/Item.js","App.js","reportWebVitals.js","index.js"],"names":["Catalog","useState","items","setItems","load","setLoad","useEffect","fetch","then","resp","json","response","catch","err","data","map","value","to","itemId","item","name","Item","setItem","id","useParams","description","cost","App","className","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAmCeA,MA9Bf,WAAmB,IAAD,EACQC,mBAAS,IADjB,mBACVC,EADU,KACJC,EADI,OAEMF,oBAAS,GAFf,mBAEVG,EAFU,KAELC,EAFK,KAejB,OAZAC,qBAAU,WACTC,MAAM,oDACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACLR,EAASQ,GACTN,GAAQ,MAGRO,OAAM,SAAAC,GACNV,EAAS,gBAET,CAACC,KACS,IAATA,EACMF,EAAMY,KAAKC,KAAI,SAAAC,GACrB,OAAO,4BACP,cAAC,IAAD,CAAMC,GAAE,gBAAWD,EAAME,QAAzB,SACCF,EAAMG,KAAKC,QAFGJ,EAAME,WAShB,0CCaMG,MAtCf,WAAgB,IAAD,EACSpB,oBAAS,GADlB,mBACPG,EADO,KACFC,EADE,OAESJ,mBAAS,IAFlB,mBAEPkB,EAFO,KAEFG,EAFE,KAGRC,EAAOC,cAAPD,GAcN,GAZAjB,qBAAU,WACTC,MAAM,sDAAD,OAAuDgB,IAC3Df,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACLN,GAAQ,GACRiB,EAAQX,MAERC,OAAM,SAAAC,GACNR,GAAQ,QAER,KAECD,IAAQe,EAiBV,OAAO,yCAhBP,IACC,OACA,gCACA,yCAAYA,EAAKL,KAAKK,KAAKC,QAC3B,gDAAmBD,EAAKL,KAAKK,KAAKM,eAClC,yCAAYN,EAAKL,KAAKK,KAAKO,QAC3B,uBACA,cAAC,IAAD,CAAMT,GAAG,IAAT,SAAa,6CAId,MAAMJ,GACL,OAAO,wC,MCRKc,MAlBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,cCRGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.606d6f4d.chunk.js","sourcesContent":["import React,{ useState,useEffect } from 'react';\nimport {\n\tLink\n} from 'react-router-dom';\n\nfunction Catalog(){\n\tconst [items,setItems] = useState([]);\n\tconst [load,setLoad] = useState(false);\n\tuseEffect(() => {\n\t\tfetch('https://fortnite-api.theapinetwork.com/store/get')\n\t\t.then(resp => resp.json())\n\t\t.then(response => {\n\t\t\tsetItems(response);\n\t\t\tsetLoad(true);\n\t\t}\n\t\t\t)\n\t\t.catch(err => {\n\t\t\tsetItems('Loading');\n\t\t})\n\t},[load])\n\tif(load === true){\n\t\t\treturn(items.data.map(value => {\n\t\t\t\treturn <p key={value.itemId}>\n\t\t\t\t<Link to={`/item/${value.itemId}`}>\n\t\t\t\t{value.item.name}\n\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t})\n\t\t\t) //return ends here\n\t\t\t} //if ends here \n\telse{\n\t\treturn <h1>Loading</h1>\n\t}  //else ends here\n}\n\nexport default Catalog;","import React,{ useState,useEffect } from 'react';\nimport {\n  useParams,\n  Link\n} from \"react-router-dom\";\n\nfunction Item(){\n\tconst [load,setLoad] = useState(false);\n\tconst [item,setItem] = useState({});\n\tlet { id } = useParams();\n\t\n\tuseEffect(() => {\n\t\tfetch(`https://fortnite-api.theapinetwork.com/item/get?id=${id}`)\n\t\t.then(resp => resp.json())\n\t\t.then(response => {\n\t\t\tsetLoad(true);\n\t\t\tsetItem(response);\n\t\t})\n\t\t.catch(err => {\n\t\t\tsetLoad(false);\n\t\t})\n\t},[]);\n\n\tif(load && item){\n\t\ttry {\n\t\t\treturn(\n\t\t\t<div>\n\t\t\t<h1>Name : {item.data.item.name}</h1>\n\t\t\t<h2>Description : {item.data.item.description}</h2>\n\t\t\t<h2>Cost : {item.data.item.cost}</h2>\n\t\t\t<br/>\n\t\t\t<Link to=\"/\"><p>Go back</p></Link>\n\t\t\t</div>\n\t\t\t)\n\t\t\t}\n\t\tcatch(err){\n\t\t\treturn <h1>Snap</h1>\n\t\t}\n\t}\n\telse{\n\t\treturn <h1>Loading</h1>\n\t}\n}\n\nexport default Item;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Catalog from './components/Catalog';\nimport Item from './components/Item';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n          <Route exact path=\"/\">\n            <Catalog />\n          </Route>\n    \n          <Route path=\"/item/:id\">\n            <Item />        \n          </Route>\n        </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}